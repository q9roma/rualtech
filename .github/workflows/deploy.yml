name: Deploy to Production

on:
  # push:
  #   branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create deployment archive
      run: |
        # Создаём архив с кодом (исключая .git и другие ненужные файлы)
        tar -czf ../deploy.tar.gz \
          --exclude='.git' \
          --exclude='node_modules' \
          --exclude='.env*' \
          --exclude='*.log' \
          --exclude='storage/logs/*' \
          --exclude='bootstrap/cache/*' \
          --exclude='deploy.tar.gz' \
          .
        mv ../deploy.tar.gz ./deploy.tar.gz
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "🚀 Подготавливаем деплой..."
          cd /var/www/www-root/data/www/rualtech.ru
          echo "📂 В директории проекта: $(pwd)"
          
          # Сохраняем важные файлы
          echo "� Сохраняем .env файл..."
          cp .env /tmp/env_backup 2>/dev/null || echo "No .env to backup"
          
          echo "🧹 Очищаем старые файлы (кроме критичных)..."
          find . -maxdepth 1 -type f -name "*.php" -delete
          find . -maxdepth 1 -type f -name "*.md" -delete
          find . -maxdepth 1 -type f -name "*.json" -delete
          find . -maxdepth 1 -type f -name "*.js" -delete
          find . -maxdepth 1 -type f -name "*.yml" -delete
          rm -rf app/ resources/ routes/ database/ config/ bootstrap/app.php bootstrap/providers.php 2>/dev/null
          
          echo "✅ Готов к получению новых файлов"
    
    - name: Copy files to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        source: "deploy.tar.gz"
        target: "/tmp/"
    
    - name: Extract and finalize deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          echo "� Распаковываем новый код..."
          cd /var/www/www-root/data/www/rualtech.ru
          
          if [ -f /tmp/deploy.tar.gz ]; then
            tar -xzf /tmp/deploy.tar.gz
            echo "✅ Код успешно распакован"
            
            # Создаем правильный .env из .env.production
            echo "🔄 Создаем правильный .env..."
            if [ -f ".env.production" ]; then
              cp .env.production .env
              echo "✅ .env создан из .env.production"
            else
              echo "❌ .env.production не найден, создаем .env вручную"
              cat > .env << 'ENVEOF'
          APP_NAME=Laravel
          APP_ENV=production
          APP_KEY=base64:koCcDULFl7i77qQI2uVkvcZ2613SXNC8R1mCahDmveU=
          APP_DEBUG=false
          APP_URL=https://rualtech.ru
          
          APP_LOCALE=ru
          APP_FALLBACK_LOCALE=ru
          
          DB_CONNECTION=mysql
          DB_HOST=localhost
          DB_PORT=3306
          DB_DATABASE=rualtech
          DB_USERNAME=alexsor
          DB_PASSWORD=eY7rG4pX7r
          
          SESSION_DRIVER=file
          SESSION_LIFETIME=120
          
          CACHE_STORE=file
          QUEUE_CONNECTION=database
          
          MAIL_MAILER=log
          MAIL_FROM_ADDRESS="office@rualtech.ru"
          MAIL_FROM_NAME="Алтех"
          ENVEOF
            fi
            
            # Очищаем временные файлы
            rm -f /tmp/deploy.tar.gz /tmp/env_backup
          else
            echo "❌ Архив не найден"
            exit 1
          fi
          
          echo "🔍 Проверяем файл после обновления:"
          grep -n "Алтех\|Altech" resources/views/frontend/home.blade.php || echo "Файл не найден"
          
          echo "🧹 Очищаем кэши Laravel..."
          php artisan cache:clear 2>/dev/null || echo "Cache clear failed"
          php artisan view:clear 2>/dev/null || echo "View clear failed"  
          php artisan config:clear 2>/dev/null || echo "Config clear failed"
          
          echo "🔄 Перезапускаем веб-сервер..."
          systemctl reload nginx 2>/dev/null || echo "Nginx reload failed"
          
          echo "✅ Деплой завершён! Проверьте https://rualtech.ru"
