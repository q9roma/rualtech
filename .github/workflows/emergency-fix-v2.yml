name: Emergency Fix - Complete Site Restoration

on:
  workflow_dispatch:

jobs:
  emergency-restore:
    runs-on: ubuntu-latest
    steps:
      - name: Complete Site Restoration
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            echo "🚨 Starting emergency restoration..."
            
            # Backup current directory if exists
            if [ -d "/var/www/www-root/data/www/rualtech.ru" ]; then
              mv /var/www/www-root/data/www/rualtech.ru /var/www/www-root/data/www/rualtech.ru.backup.$(date +%Y%m%d_%H%M%S)
            fi
            
            # Create fresh directory
            mkdir -p /var/www/www-root/data/www/rualtech.ru
            cd /var/www/www-root/data/www/rualtech.ru
            
            # Download repository as archive (works with private repos)
            wget https://github.com/q9roma/rualtech/archive/refs/heads/main.zip -O repo.zip
            unzip repo.zip
            mv rualtech-main/* .
            mv rualtech-main/.* . 2>/dev/null || true
            rm -rf rualtech-main repo.zip
            
            # Install dependencies
            export COMPOSER_ALLOW_SUPERUSER=1
            composer install --no-dev --optimize-autoloader
            
            # Create .env file
            cat > .env << 'EOF'
            APP_NAME=Altech
            APP_ENV=production
            APP_KEY=base64:your_app_key_here
            APP_DEBUG=false
            APP_URL=https://rualtech.ru
            
            DB_CONNECTION=mysql
            DB_HOST=127.0.0.1
            DB_PORT=3306
            DB_DATABASE=your_database
            DB_USERNAME=your_username
            DB_PASSWORD=your_password
            
            BROADCAST_DRIVER=log
            CACHE_DRIVER=file
            FILESYSTEM_DISK=local
            QUEUE_CONNECTION=sync
            SESSION_DRIVER=file
            SESSION_LIFETIME=120
            EOF
            
            # Create storage structure
            mkdir -p storage/logs
            mkdir -p storage/framework/cache
            mkdir -p storage/framework/sessions
            mkdir -p storage/framework/views
            mkdir -p bootstrap/cache
            
            # Set permissions
            chown -R www-data:www-data /var/www/www-root/data/www/rualtech.ru
            chmod -R 755 /var/www/www-root/data/www/rualtech.ru
            chmod -R 775 /var/www/www-root/data/www/rualtech.ru/storage
            chmod -R 775 /var/www/www-root/data/www/rualtech.ru/bootstrap/cache
            
            # Try to find correct PHP-FPM service
            if systemctl is-active --quiet php8.1-fpm; then
              PHP_FPM_SERVICE="php8.1-fpm"
            elif systemctl is-active --quiet php8.0-fpm; then
              PHP_FPM_SERVICE="php8.0-fpm"
            elif systemctl is-active --quiet php7.4-fpm; then
              PHP_FPM_SERVICE="php7.4-fpm"
            else
              PHP_FPM_SERVICE="apache2"
            fi
            
            echo "Using PHP service: $PHP_FPM_SERVICE"
            
            # Clear caches only if artisan exists
            if [ -f "artisan" ]; then
              php artisan config:clear || true
              php artisan cache:clear || true
              php artisan view:clear || true
              php artisan route:clear || true
            fi
            
            # Restart services
            systemctl reload nginx || true
            systemctl restart $PHP_FPM_SERVICE || true
            
            echo "✅ Emergency restoration completed"
            echo "📁 Directory contents:"
            ls -la
            echo "📋 Checking if site works:"
            curl -I http://localhost || echo "Site not responding yet"
