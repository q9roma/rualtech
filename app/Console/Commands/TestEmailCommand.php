<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Mail;
use Illuminate\Support\Facades\Log;
use App\Models\ContactRequest;
use App\Mail\AdminContactNotification;

class TestEmailCommand extends Command
{
    protected $signature = 'email:test {--email=office@rualtech.ru : Email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è}';
    protected $description = '–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É email –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã';

    public function handle()
    {
        $this->info('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ—á—Ç–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫');
        $this->info('================================');

        // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã
        $this->newLine();
        $this->info('üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—á—Ç—ã:');
        $this->table(['–ü–∞—Ä–∞–º–µ—Ç—Ä', '–ó–Ω–∞—á–µ–Ω–∏–µ'], [
            ['MAIL_MAILER', config('mail.default')],
            ['MAIL_HOST', config('mail.mailers.smtp.host') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'],
            ['MAIL_PORT', config('mail.mailers.smtp.port') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'],
            ['MAIL_USERNAME', config('mail.mailers.smtp.username') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'],
            ['MAIL_FROM_ADDRESS', config('mail.from.address') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'],
            ['MAIL_FROM_NAME', config('mail.from.name') ?: '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û'],
            ['Admin Email', config('mail.admin_email', 'office@rualtech.ru')],
        ]);

        // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        $this->newLine();
        $this->info('üîß –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
        $envVars = ['MAIL_MAILER', 'MAIL_HOST', 'MAIL_PORT', 'MAIL_USERNAME', 'MAIL_PASSWORD', 'MAIL_FROM_ADDRESS'];
        foreach ($envVars as $var) {
            $value = env($var);
            $displayValue = $value ? (strpos($var, 'PASSWORD') !== false ? '***—Å–∫—Ä—ã—Ç–æ***' : $value) : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–û';
            $this->line("$var: $displayValue");
        }

        // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
        $this->newLine();
        $this->info('üìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É...');
        
        $testRequest = new ContactRequest([
            'name' => '–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã',
            'email' => 'test@example.com',
            'phone' => '+7 (999) 123-45-67',
            'company' => '–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
            'subject' => '–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ email - ' . now()->format('d.m.Y H:i:s'),
            'message' => '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã email —Å–∏—Å—Ç–µ–º—ã.',
            'service' => '–¢–µ—Å—Ç–æ–≤–∞—è —É—Å–ª—É–≥–∞',
            'source' => 'test',
            'meta_data' => [
                'test' => true,
                'timestamp' => now()->toISOString()
            ]
        ]);

        // 4. –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å email
        $adminEmail = $this->option('email');
        $this->info("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π email –Ω–∞: $adminEmail");
        
        try {
            Mail::to($adminEmail)->send(new AdminContactNotification($testRequest));
            $this->info("‚úÖ Email —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!");
            
        } catch (\Exception $e) {
            $this->error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:");
            $this->error("–°–æ–æ–±—â–µ–Ω–∏–µ: " . $e->getMessage());
            $this->error("–§–∞–π–ª: " . $e->getFile() . ":" . $e->getLine());
            
            if ($this->option('verbose')) {
                $this->error("–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞:");
                $this->error($e->getTraceAsString());
            }
        }

        // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞—è–≤–∫–∏
        $this->newLine();
        $this->info('üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞—è–≤–æ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:');
        
        try {
            $recentRequests = ContactRequest::orderBy('created_at', 'desc')->take(5)->get();
            
            if ($recentRequests->count() > 0) {
                $headers = ['ID', '–î–∞—Ç–∞', 'Email', '–¢–µ–º–∞'];
                $rows = $recentRequests->map(function ($request) {
                    return [
                        $request->id,
                        $request->created_at->format('d.m.Y H:i:s'),
                        $request->email,
                        \Str::limit($request->subject, 50)
                    ];
                })->toArray();
                
                $this->table($headers, $rows);
            } else {
                $this->warn('–ó–∞—è–≤–æ–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            }
        } catch (\Exception $e) {
            $this->error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫: " . $e->getMessage());
        }

        // 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        $this->newLine();
        $this->info('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:');
        $this->line('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä–µ');
        $this->line('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ MAIL_MAILER –Ω–µ —Ä–∞–≤–µ–Ω "log"');
        $this->line('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: storage/logs/laravel.log');
        $this->line('4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP —Å–µ—Ä–≤–µ—Ä–∞');
        $this->line('5. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–æ—Ä—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω —Ñ–∞–π—Ä–≤–æ–ª–æ–º');

        return 0;
    }
}